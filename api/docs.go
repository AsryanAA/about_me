// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/create": {
            "post": {
                "tags": [
                    "Место работы (work_place)"
                ],
                "summary": "Создание новой записи Место работы",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AuthId",
                        "name": "auth_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "PasswordWeb",
                        "name": "password_web",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.WorkPlace"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/read": {
            "get": {
                "tags": [
                    "Места работы (work_places)"
                ],
                "summary": "Чтение всех записей Места работы",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AuthId",
                        "name": "auth_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "PasswordWeb",
                        "name": "password_web",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.WorkPlace"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/update": {
            "patch": {
                "tags": [
                    "Место работы (work_place)"
                ],
                "summary": "Обновление записи Место работы",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AuthId",
                        "name": "auth_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "PasswordWeb",
                        "name": "password_web",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.WorkPlace"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.WorkPlace": {
            "type": "object",
            "properties": {
                "begin_date": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "what_doing": {
                    "type": "string"
                },
                "work_place": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	// LeftDelim:        "{{",
	// RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
